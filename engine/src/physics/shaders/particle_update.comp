#version 450

layout(local_size_x = 256) in;

layout(set = 0, binding = 0) buffer PosBuffer {
    vec4 positions[];
};

layout(set = 0, binding = 1) buffer VelBuffer {
    vec4 velocities[];
};

layout(set = 0, binding = 2) readonly buffer MassBuffer {
    float masses[];
};

layout(push_constant) uniform Constants {
    float delta_time;
    vec3 gravity;
    uint particle_count;
};

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= particle_count) {
        return;
    }

    vec3 position = positions[idx].xyz;
    vec3 velocity = velocities[idx].xyz;
    float mass = masses[idx];

    // Update velocity with gravity
    velocity += gravity * delta_time;

    // Update position
    position += velocity * delta_time;

    // Write back results
    positions[idx] = vec4(position, 1.0);
    velocities[idx] = vec4(velocity, 0.0);
}